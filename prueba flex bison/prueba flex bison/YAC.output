Grammar

    0 $accept: e $end

    1 e: e '+' t
    2  | t

    3 t: t '*' f
    4  | f

    5 f: m '(' e ')'
    6  | m ID
    7  | m NUM

    8 m: /* empty */
    9  | '-'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 5
')' (41) 5
'*' (42) 3
'+' (43) 1
'-' (45) 9
error (256)
ID (258) 6
NUM (259) 7


Nonterminals, with rules where they appear

$accept (10)
    on left: 0
e (11)
    on left: 1 2, on right: 0 1 5
t (12)
    on left: 3 4, on right: 1 2 3
f (13)
    on left: 5 6 7, on right: 3 4
m (14)
    on left: 8 9, on right: 5 6 7


State 0

    0 $accept: . e $end

    '-'  shift, and go to state 1

    $default  reduce using rule 8 (m)

    e  go to state 2
    t  go to state 3
    f  go to state 4
    m  go to state 5


State 1

    9 m: '-' .

    $default  reduce using rule 9 (m)


State 2

    0 $accept: e . $end
    1 e: e . '+' t

    $end  shift, and go to state 6
    '+'   shift, and go to state 7


State 3

    2 e: t .
    3 t: t . '*' f

    '*'  shift, and go to state 8

    $default  reduce using rule 2 (e)


State 4

    4 t: f .

    $default  reduce using rule 4 (t)


State 5

    5 f: m . '(' e ')'
    6  | m . ID
    7  | m . NUM

    ID   shift, and go to state 9
    NUM  shift, and go to state 10
    '('  shift, and go to state 11


State 6

    0 $accept: e $end .

    $default  accept


State 7

    1 e: e '+' . t

    '-'  shift, and go to state 1

    $default  reduce using rule 8 (m)

    t  go to state 12
    f  go to state 4
    m  go to state 5


State 8

    3 t: t '*' . f

    '-'  shift, and go to state 1

    $default  reduce using rule 8 (m)

    f  go to state 13
    m  go to state 5


State 9

    6 f: m ID .

    $default  reduce using rule 6 (f)


State 10

    7 f: m NUM .

    $default  reduce using rule 7 (f)


State 11

    5 f: m '(' . e ')'

    '-'  shift, and go to state 1

    $default  reduce using rule 8 (m)

    e  go to state 14
    t  go to state 3
    f  go to state 4
    m  go to state 5


State 12

    1 e: e '+' t .
    3 t: t . '*' f

    '*'  shift, and go to state 8

    $default  reduce using rule 1 (e)


State 13

    3 t: t '*' f .

    $default  reduce using rule 3 (t)


State 14

    1 e: e . '+' t
    5 f: m '(' e . ')'

    '+'  shift, and go to state 7
    ')'  shift, and go to state 15


State 15

    5 f: m '(' e ')' .

    $default  reduce using rule 5 (f)
